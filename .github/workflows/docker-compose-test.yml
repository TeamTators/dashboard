name: docker-compose-test

on:
  workflow_call:
  push:
    branches:
      - '*'
      - '!deploy'
      - '!gh-pages'

permissions:
  contents: read

jobs:
  docker-compose-tests:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Initialize .docker.env and .env for DB setup
        run: |
          echo "DB_USER=test_user" > .docker.env
          echo "DB_PASS=test" >> .docker.env
          echo "DB_NAME=test" >> .docker.env
          echo "DB_PORT=5432" >> .docker.env
          echo "SECRET_OAUTH2_CLIENT_ID=1234567890" >> .docker.env
          echo "PUBLIC_APP_NAME=test" >> .docker.env
          echo "SECRET_OAUTH2_CLIENT_SECRET=1234567890" >> .docker.env
          echo "PUBLIC_APP_NAME=test" >> .docker.env
          echo "REDIS_NAME=some_name" >> .docker.env
          echo "REDIS_URL=redis://redis:6379" >> .docker.env
          echo "ENVIRONMENT=test" >> .docker.env
          echo "PORT=3000" >> .docker.env

          # Copy to .env for scripts needing it during DB setup
          cp .docker.env .env
          echo "DB_HOST=db" >> .docker.env


      - name: Build app image with cache
        run: |
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t myapp:latest \
            -f Dockerfile .

          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Set up Postgres container and Redis
        run: |
          docker compose --project-name test up -d db redis

          # Wait for Postgres ready (timeout ~15s)
          for i in $(seq 1 15); do
            if docker exec db pg_isready -U admin; then
              echo "Postgres ready"
              break
            fi
            echo "Waiting for Postgres ($i/15)..."
            sleep 1
          done

          # Run DB initialization commands
          docker exec db psql -U admin -c "CREATE ROLE test_user WITH LOGIN PASSWORD 'test';"
          docker exec db psql -U admin -c "CREATE DATABASE test WITH OWNER test_user;"
          docker exec db psql -U admin -c "GRANT admin TO test_user;"

      - name: Temporarily override DB_HOST to localhost for migration commands
        run: |
          cp .env .env.bak
          echo "DB_HOST=localhost" >> .env

      - name: Install Node.js & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 22.12.0

      - name: Install dependencies
        run: pnpm i

      - name: Run migrations and push schema
        run: |
          pnpm db:migrate
          pnpm db:push --force

      - name: Restore .env with DB_HOST=db
        run: |
          rm .env
          mv .env.bak .env
          echo "DB_HOST=db" >> .env

      - name: Start app container
        run: docker compose --project-name test up -d app

      - name: Run integration tests
        run: pnpm test:integration

      - name: Cleanup
        run: docker compose --project-name test down -v
